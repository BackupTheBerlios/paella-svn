#!/bin/bash

lapnet_address=10.0.1.1
lapnet_netmask=255.255.255.0
lapnet_netcidr=10.0.1.0/24
lapnet_network=10.0.1.0
lapnet_dhcpstart=10.0.1.20
lapnet_dhcpend=10.0.1.253

echo "modifying /etc/network/interfaces"
if ! [ -f /etc/network/interfaces.orig ]; then
    mv /etc/network/interfaces /etc/network/interfaces.orig
fi
cat <<EOF > /etc/network/interfaces;
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto eth0
iface eth0 inet dhcp

auto eth1
iface eth1 inet static
	address 10.0.1.1
	netmask 255.255.255.0

EOF

if ! [ -f /etc/postgresql/8.3/main/postgresql.conf ]; then
    echo "installing postgresql database cluster"
    pg_createcluster 8.3 main --start
fi

echo "replacing /etc/postgresql/8.3/main/pg_hba.conf"
if ! [ -f /etc/postgresql/8.3/main/pg_hba.conf.orig ]; then
    mv /etc/postgresql/8.3/main/pg_hba.conf /etc/postgresql/8.3/main/pg_hba.conf.orig
fi
cat <<EOF > /etc/postgresql/8.3/main/pg_hba.conf

# Database administrative login by UNIX sockets
local   all         postgres                          ident sameuser

# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD

# "local" is for Unix domain socket connections only
local   all         all                               ident sameuser
# IPv4 local connections:
host    all         all         127.0.0.0/8          md5
host	paella	paella	10.0.1.0/24	trust
host	all	dbadmin	10.0.1.0/24	trust
# wide open
#host	all	dbadmin	0.0.0.0/0  	trust
host	all	all	10.0.1.0/24	md5
# IPv6 local connections:
host    all         all         ::1/128               md5

EOF

echo "replacing /etc/postgresql/8.3/main/postgresql.conf"
if ! [ -f /etc/postgresql/8.3/main/postgresql.conf.orig ]; then
    mv /etc/postgresql/8.3/main/postgresql.conf /etc/postgresql/8.3/main/postgresql.conf.orig
fi
cat <<EOF> /etc/postgresql/8.3/main/postgresql.conf


data_directory = '/var/lib/postgresql/8.3/main'		# use data in another directory
					# (change requires restart)
hba_file = '/etc/postgresql/8.3/main/pg_hba.conf'	# host-based authentication file
					# (change requires restart)
ident_file = '/etc/postgresql/8.3/main/pg_ident.conf'	# ident configuration file
					# (change requires restart)

# If external_pid_file is not explicitly set, no extra PID file is written.
external_pid_file = '/var/run/postgresql/8.3-main.pid'		# write an extra PID file
					# (change requires restart)

# - Connection Settings -
listen_addresses = '10.0.1.1,127.0.0.1'
#listen_addresses = 'localhost'		# what IP address(es) to listen on;
# wide open
#listen_addresses = '*'			# comma-separated list of addresses;
					# defaults to 'localhost', '*' = all
					# (change requires restart)
port = 5432				# (change requires restart)
max_connections = 100			# (change requires restart)
# Note:  Increasing max_connections costs ~400 bytes of shared memory per 
# connection slot, plus lock space (see max_locks_per_transaction).  You might
# also need to raise shared_buffers to support more connections.
#superuser_reserved_connections = 3	# (change requires restart)
unix_socket_directory = '/var/run/postgresql'		# (change requires restart)
#unix_socket_group = ''			# (change requires restart)
#unix_socket_permissions = 0777		# begin with 0 to use octal notation
					# (change requires restart)
#bonjour_name = ''			# defaults to the computer name
					# (change requires restart)

# - Security and Authentication -

#authentication_timeout = 1min		# 1s-600s
ssl = true				# (change requires restart)
#ssl_ciphers = 'ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH'	# allowed SSL ciphers
					# (change requires restart)
#password_encryption = on
#db_user_namespace = off


# - Memory -

shared_buffers = 24MB			# min 128kB or max_connections*16kB
					# (change requires restart)
# - Free Space Map -

max_fsm_pages = 153600			# min max_fsm_relations*16, 6 bytes each
					# (change requires restart)

log_line_prefix = '%t '			# special values:


# - Locale and Formatting -

datestyle = 'iso, mdy'

# These settings are initialized by initdb, but they can be changed.
lc_messages = 'en_US.UTF-8'			# locale for system error message
					# strings
lc_monetary = 'en_US.UTF-8'			# locale for monetary formatting
lc_numeric = 'en_US.UTF-8'			# locale for number formatting
lc_time = 'en_US.UTF-8'				# locale for time formatting

# default configuration for text search
default_text_search_config = 'pg_catalog.english'

EOF

echo "Changing ownership of postgresql config files"
pushd /etc/postgresql/8.3/main
chown postgres:postgres pg_hba.conf postgresql.conf
popd

echo "Creating postgresql database users"
su postgres -c "createuser -SDR paella"
su postgres -c "createuser -sdr dbadmin"

echo "Creating plpgsql language in template1"
su postgres -c "createlang plpgsql template1"
echo "Creating empty paella database"
su postgres -c "createdb paella"



echo "copying shorewall files from example"
cp /usr/share/doc/shorewall-common/examples/two-interfaces/* /etc/shorewall

# I'm used to this step, but it's not necessary
chmod o-rx /etc/shorewall


echo "replacing /etc/shorewall/interfaces"
mv /etc/shorewall/interfaces /etc/shorewall/interfaces.orig

cat <<EOF> /etc/shorewall/interfaces
#ZONE	INTERFACE	BROADCAST	OPTIONS
net     eth0            detect          dhcp,tcpflags,routefilter,nosmurfs,logmartians
loc     eth1            detect          tcpflags,nosmurfs
#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE

EOF

echo "replacing /etc/shorewall/masq"
mv /etc/shorewall/masq /etc/shorewall/masq.orig
cat <<EOF> /etc/shorewall/masq
#INTERFACE		SOURCE		ADDRESS		PROTO	PORT(S)	IPSEC	MARK
eth0                    eth1
#LAST LINE -- ADD YOUR ENTRIES ABOVE THIS LINE -- DO NOT REMOVE

EOF

echo "replacing /etc/shorewall/policy"
mv /etc/shorewall/policy /etc/shorewall/policy.orig
cat <<EOF > /etc/shorewall/policy
#SOURCE		DEST		POLICY		LOG LEVEL	LIMIT:BURST

# Policies for traffic originating from the local LAN (loc)
#
# If you want to force clients to access the Internet via a proxy server
# on your firewall, change the loc to net policy to REJECT info.
loc		net		ACCEPT
loc		\$FW		ACCEPT		info
loc		all		REJECT		info

#
# Policies for traffic originating from the firewall (\$FW)
#
# If you want open access to the Internet from your firewall, change the
# \$FW to net policy to ACCEPT and remove the 'info' LOG LEVEL.
# This may be useful if you run a proxy server on the firewall.
\$FW		net		ACCEPT		info
\$FW		loc		REJECT		info
\$FW		all		REJECT		info

#
# Policies for traffic originating from the Internet zone (net)
#
net		\$FW		DROP		info
# wide open
#net		\$FW		ACCEPT
net		loc		DROP		info
net		all		DROP		info

# THE FOLLOWING POLICY MUST BE LAST
all		all		REJECT		info

#LAST LINE -- ADD YOUR ENTRIES ABOVE THIS LINE -- DO NOT REMOVE

EOF

echo "replacing /etc/shorewall/rules"
mv /etc/shorewall/rules /etc/shorewall/rules.orig
cat <<EOF> /etc/shorewall/rules
#ACTION		SOURCE		DEST		PROTO	DEST	SOURCE		ORIGINAL	RATE		USER/	MARK
#							PORT	PORT(S)		DEST		LIMIT		GROUP
#
#	Accept DNS connections from the firewall to the network
#
DNS/ACCEPT	\$FW		net
#
#	Accept SSH connections from the local network for administration
#
SSH/ACCEPT	loc		\$FW
#
# You may want to comment these two lines out if your using a bridged connection
# I recommend leaving the SSH line open, but the postgresql database on the
# virtual machine is configured for a testing environment, and isn't secure.
SSH/ACCEPT	net		\$FW
PostgreSQL/ACCEPT	net	\$FW
#SMB/ACCEPT	net		\$FW
#VNC/DNAT	net		loc:10.0.1.20
#
#	Allow Ping from the local network
#
Ping/ACCEPT	loc		\$FW

#
# Drop Ping from the "bad" net zone.. and prevent your log from being flooded..
#

Ping/DROP	net		\$FW

ACCEPT		\$FW		loc		icmp
ACCEPT		\$FW		net		icmp
#

#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE


EOF

mv /etc/default/shorewall /etc/default/shorewall.orig
cat <<EOF > /etc/default/shorewall
# prevent startup with default configuration
# set the following varible to 1 in order to allow Shorewall to start

startup=1

# if your Shorewall configuration requires detection of the ip address of a ppp
# interface, you must list such interfaces in "wait_interface" to get Shorewall to
# wait until the interface is configured. Otherwise the script will fail because
# it won't be able to detect the IP address.
#
# Example:
#    wait_interface="ppp0"
# or
#    wait_interface="ppp0 ppp1"
# or, if you have defined  in /etc/shorewall/params
#    wait_interface=

#
# Startup options
#

OPTIONS=""

EOF

echo "finished with shorewall"

echo "replacing /etc/dhcp3/dhcpd.conf"
if ! [ -f /etc/dhcp3/dhcpd.conf.orig ]; then
    mv /etc/dhcp3/dhcpd.conf /etc/dhcp3/dhcpd.conf.orig
fi
cat<<EOF > /etc/dhcp3/dhcpd.conf

ddns-update-style none;

default-lease-time 600;
max-lease-time 7200;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
log-facility local7;

subnet 10.0.1.0 netmask 255.255.255.0 {
       range 10.0.1.20 10.0.1.253;
       option domain-name "lapnet";
       option domain-name-servers 10.0.1.1;
       option routers 10.0.1.1;
       filename "pxelinux.0";
}

EOF

echo "replacing /etc/X11/xorg.conf"
if ! [ -f /etc/X11/xorg.conf.orig ]; then
    mv /etc/X11/xorg.conf /etc/X11/xorg.conf.orig
fi
cat <<EOF > /etc/X11/xorg.conf
# xorg.conf (X.Org X Window System server configuration file)
#
# This file was generated by dexconf, the Debian X Configuration tool, using
# values from the debconf database.
#
# Edit this file with caution, and see the xorg.conf manual page.
# (Type "man xorg.conf" at the shell prompt.)
#
# This file is automatically updated on xserver-xorg package upgrades *only*
# if it has not been modified since the last upgrade of the xserver-xorg
# package.
#
# If you have edited this file but would like it to be automatically updated
# again, run the following command:
#   sudo dpkg-reconfigure -phigh xserver-xorg

Section "InputDevice"
	Identifier	"Generic Keyboard"
	Driver		"kbd"
	Option		"XkbRules"	"xorg"
	Option		"XkbModel"	"pc105"
	Option		"XkbLayout"	"us"
EndSection

Section "InputDevice"
	Identifier	"Configured Mouse"
	Driver		"mouse"
EndSection

Section "Device"
	Identifier	"Configured Video Device"
	Driver		"vesa"
EndSection

Section "Monitor"
	Identifier	"Configured Monitor"
EndSection

Section "Screen"
	Identifier	"Default Screen"
	Monitor		"Configured Monitor"
	SubSection "Display"
	    Modes  "1024x768"
	EndSubSection
EndSection

#Section "ServerFlags"
#	Option		"DontZap"
#EndSection

EOF

if ! [ -f /etc/apt-move.conf.orig ]; then
    echo "replacing /etc/apt-move.conf"
    mv /etc/apt-move.conf /etc/apt-move.conf.orig
fi

cat <<EOF > /etc/apt-move.conf
#  Configuration file for the apt-move script.
#
#  You should modify the following configuration to suit your system.
#  See the apt-move(8) manpage for information about these settings.
#
#  The defaults for this file are simply the settings I currently use.

# Configuration for apt-move script --------------------------------------

# The sites in ``/etc/apt/sources.list'' that you wish to mirror.
APTSITES="/all/"

# The absolute path to your debian directory (top of your local mirror).
# This MUST appear as the first entry of your sources.list if you use
# sync or mirror.
LOCALDIR=/freespace/debian

# The default distribution (see the apt-move(8) manpage for details) 
DIST=lenny

# The package types you want to mirror. 
# Possible values are: binary, source, and both (use only one).
PKGTYPE=binary

# The full (absolute) path to your local cache of package files. The default
# will work for the apt-get packages, unless you've reconfigured apt.
FILECACHE=/var/cache/apt/archives

# The full (absolute) path to your local cache of Packages files.  The
# default will work for the apt-get Packages, unless you've reconfigured apt.
LISTSTATE=/var/lib/apt/lists

# Do you want apt-move to delete obsolete files from your mirror? (yes/no)
DELETE=yes


# Maximum percentage of files to delete during a normal run.
MAXDELETE=20

# Set this to yes if you wish to keep the originals for move/movefile.
COPYONLY=no

# Set this to 'none gzip' to get uncompressed Packages/Sources files.
PKGCOMP='none gzip bzip2'

# Set this to yes to make apt-move generate Contents files.
CONTENTS=no

# Set this to key name to be used for signing Release files.
GPGKEY=

# End Configuration ------------------------------------------------------

EOF

# taken from reprepro howto
# added +FollowSymLinks
cat <<EOF > /etc/apache2/conf.d/reprepro.conf
Alias /debian /freespace/debian
<Directory /freespace/debian>
        Options +Indexes +FollowSymLinks
        AllowOverride None
        order allow,deny
        allow from all
</Directory>

EOF


if ! [ -d /freespace ]; then
    echo "making paella directories"
    mkdir /freespace
    # for the debian mirror
    mkdir /freespace/debian
    chgrp staff /freespace/debian
    chmod g+sw /freespace/debian
    # for the nfsroot
    mkdir /freespace/paella
    # for the installer logs
    mkdir /freespace/paellalog
    # to build the nfsroot
    mkdir /freespace/live
    chgrp staff /freespace/live
    chmod g+sw /freespace/live
fi

if ! [ -f /etc/exports.orig ]; then
    echo "replacing /etc/exports"
    mv /etc/exports /etc/exports.orig
fi

cat <<EOF > /etc/exports
# /etc/exports: the access control list for filesystems which may be exported
#		to NFS clients.  See exports(5).
#
# Example for NFSv2 and NFSv3:
# /srv/homes       hostname1(rw,sync,no_subtree_check) hostname2(ro,sync,no_subtree_check)
#
# Example for NFSv4:
# /srv/nfs4        gss/krb5i(rw,sync,fsid=0,crossmnt,no_subtree_check)
# /srv/nfs4/homes  gss/krb5i(rw,sync,no_subtree_check)
#
/freespace/paella	*(rw,sync,no_subtree_check,no_root_squash,no_subtree_check)
/freespace/paellalog	*(rw,sync,no_subtree_check,no_root_squash,no_subtree_check)

EOF

echo "restarting services"
/etc/init.d/networking stop
echo "sleeping for 3 seconds"
sleep 3
/etc/init.d/networking start
/etc/init.d/dhcp3-server restart
/etc/init.d/postgresql-8.3 restart
/etc/init.d/shorewall restart
/etc/init.d/apache2 restart

if [ -f /usr/local/bin/setup-paella-server ]; then
    echo "moving this script to /root , since it's only supposed to run once"
    mv /usr/local/bin/setup-paella-server /root
fi

echo "Setup of paella server is complete"
