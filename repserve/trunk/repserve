#!/usr/bin/env python
import os, sys
from optparse import OptionParser

from repserve.config import RepserveConfig
from repserve.config import DEFAULT_CONFIG

from repserve.reprepro import RepRepRo
from repserve.main import RepserveHandler
from repserve.main import REPSERVE_COMMANDS

parser = OptionParser()
parser.add_option('-c', '--config', action='store', type='string',
                  dest='configfile', default='~/repserve.conf',
                  help='config file to use')
parser.add_option('--arch', action='store', type='string',
                  dest='arch', default=None)
parser.add_option('--dist', action='store', type='string',
                  dest='dist', default=None)
parser.add_option('--repos', action='store', type='string',
                  dest='repos', default=None)
parser.set_usage('%prog [options] command [args]')

opts, args = parser.parse_args(sys.argv[1:])

DEFAULT_CONFIGFILE = os.path.expanduser('~/repserve.conf')
config = RepserveConfig()
configfile = os.path.expanduser(opts.configfile)
# create default config if not there
if configfile == DEFAULT_CONFIGFILE:
    if not os.path.isfile(configfile):
        outfile = file(configfile, 'w')
        outfile.write(DEFAULT_CONFIG)
        outfile.close()
# fail if config file not present
if not os.path.isfile(configfile):
    print "Configuration file %s isn't present." % configfile
    sys.exit(1)

config.read(configfile)
config.configfilename = configfile

reprepro = RepRepRo(config)

handler = RepserveHandler(config)

if not args:
    print parser.print_help()
    sys.exit(0)
    

command = args[0]
if command not in REPSERVE_COMMANDS:
    raise RuntimeError , "%s is an unknown command." % command

# slice command from the args
args = args[1:]
handler.handle(command, opts, args)

if __name__ == '__main__':
    r = reprepro
    
