#!/bin/bash

echo "modifying /etc/network/interfaces"
cat <<EOF>>/etc/network/interfaces;

iface eth1 inet static
	address 10.0.1.1
	netmask 255.255.255.0

EOF

echo "installing postgresql database cluster"
pg_createcluster 8.3 main --start


echo "replacing /etc/postgresql/8.3/main/pg_hba.conf"
mv /etc/postgresql/8.3/main/pg_hba.conf /etc/postgresql/8.3/main/pg_hba.conf.orig

cat <<EOF > /etc/postgresql/8.3/main/pg_hba.conf

# Database administrative login by UNIX sockets
local   all         postgres                          ident sameuser

# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD

# "local" is for Unix domain socket connections only
local   all         all                               ident sameuser
# IPv4 local connections:
host    all         all         127.0.0.0/8          md5
host	paella	paella	10.0.1.0/24	trust
host	all	all	10.0.1.0/24	md5
# IPv6 local connections:
host    all         all         ::1/128               md5

EOF

echo "replacing /etc/postgresql/8.3/main/postgresql.conf"
mv /etc/postgresql/8.3/main/postgresql.conf /etc/postgresql/8.3/main/postgresql.conf.orig

cat <<EOF> /etc/postgresql/8.3/main/postgresql.conf


data_directory = '/var/lib/postgresql/8.3/main'		# use data in another directory
					# (change requires restart)
hba_file = '/etc/postgresql/8.3/main/pg_hba.conf'	# host-based authentication file
					# (change requires restart)
ident_file = '/etc/postgresql/8.3/main/pg_ident.conf'	# ident configuration file
					# (change requires restart)

# If external_pid_file is not explicitly set, no extra PID file is written.
external_pid_file = '/var/run/postgresql/8.3-main.pid'		# write an extra PID file
					# (change requires restart)

# - Connection Settings -
listen_addresses = '10.0.1.1,127.0.0.1'
#listen_addresses = 'localhost'		# what IP address(es) to listen on;
					# comma-separated list of addresses;
					# defaults to 'localhost', '*' = all
					# (change requires restart)
port = 5432				# (change requires restart)
max_connections = 100			# (change requires restart)
# Note:  Increasing max_connections costs ~400 bytes of shared memory per 
# connection slot, plus lock space (see max_locks_per_transaction).  You might
# also need to raise shared_buffers to support more connections.
#superuser_reserved_connections = 3	# (change requires restart)
unix_socket_directory = '/var/run/postgresql'		# (change requires restart)
#unix_socket_group = ''			# (change requires restart)
#unix_socket_permissions = 0777		# begin with 0 to use octal notation
					# (change requires restart)
#bonjour_name = ''			# defaults to the computer name
					# (change requires restart)

# - Security and Authentication -

#authentication_timeout = 1min		# 1s-600s
ssl = true				# (change requires restart)
#ssl_ciphers = 'ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH'	# allowed SSL ciphers
					# (change requires restart)
#password_encryption = on
#db_user_namespace = off


# - Memory -

shared_buffers = 24MB			# min 128kB or max_connections*16kB
					# (change requires restart)
# - Free Space Map -

max_fsm_pages = 153600			# min max_fsm_relations*16, 6 bytes each
					# (change requires restart)

log_line_prefix = '%t '			# special values:


# - Locale and Formatting -

datestyle = 'iso, mdy'

# These settings are initialized by initdb, but they can be changed.
lc_messages = 'en_US.UTF-8'			# locale for system error message
					# strings
lc_monetary = 'en_US.UTF-8'			# locale for monetary formatting
lc_numeric = 'en_US.UTF-8'			# locale for number formatting
lc_time = 'en_US.UTF-8'				# locale for time formatting

# default configuration for text search
default_text_search_config = 'pg_catalog.english'

EOF

echo "Changing ownership of postgresql config files"
pushd /etc/postgresql/8.3/main
chown postgres:postgres pg_hba.conf postgresql.conf
popd


echo "copying shorewall files from example"
cp /usr/share/doc/shorewall-common/examples/two-interfaces/* /etc/shorewall

# I'm used to this step, but it's not necessary
chmod o-rx /etc/shorewall


echo "replacing /etc/shorewall/interfaces"
mv /etc/shorewall/interfaces /etc/shorewall/interfaces.orig

cat <<EOF> /etc/shorewall/interfaces
#ZONE	INTERFACE	BROADCAST	OPTIONS
net     eth0            detect          dhcp,tcpflags,routefilter,nosmurfs,logmartians
loc     eth1            detect          tcpflags,nosmurfs
#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE

EOF

echo "replacing /etc/shorewall/masq"
mv /etc/shorewall/masq /etc/shorewall/masq.orig
cat <<EOF> /etc/shorewall/masq
#INTERFACE		SOURCE		ADDRESS		PROTO	PORT(S)	IPSEC	MARK
eth0                    eth1
#LAST LINE -- ADD YOUR ENTRIES ABOVE THIS LINE -- DO NOT REMOVE

EOF

echo "replacing /etc/shorewall/policy"
mv /etc/shorewall/policy /etc/shorewall/policy.orig
cat <<EOF > /etc/shorewall/policy
#SOURCE		DEST		POLICY		LOG LEVEL	LIMIT:BURST

# Policies for traffic originating from the local LAN (loc)
#
# If you want to force clients to access the Internet via a proxy server
# on your firewall, change the loc to net policy to REJECT info.
loc		net		ACCEPT
loc		$FW		ACCEPT		info
loc		all		REJECT		info

#
# Policies for traffic originating from the firewall ($FW)
#
# If you want open access to the Internet from your firewall, change the
# $FW to net policy to ACCEPT and remove the 'info' LOG LEVEL.
# This may be useful if you run a proxy server on the firewall.
$FW		net		ACCEPT		info
$FW		loc		REJECT		info
$FW		all		REJECT		info

#
# Policies for traffic originating from the Internet zone (net)
#
net		$FW		DROP		info
net		loc		DROP		info
net		all		DROP		info

# THE FOLLOWING POLICY MUST BE LAST
all		all		REJECT		info

#LAST LINE -- ADD YOUR ENTRIES ABOVE THIS LINE -- DO NOT REMOVE

EOF

echo "replacing /etc/shorewall/rules"
mv /etc/shorewall/rules /etc/shorewall/rules.orig
cat <<EOF> /etc/shorewall/rules
#ACTION		SOURCE		DEST		PROTO	DEST	SOURCE		ORIGINAL	RATE		USER/	MARK
#							PORT	PORT(S)		DEST		LIMIT		GROUP
#
#	Accept DNS connections from the firewall to the network
#
DNS/ACCEPT	$FW		net
#
#	Accept SSH connections from the local network for administration
#
SSH/ACCEPT	loc		$FW
#
# You may want to uncomment these if your using a bridged connection
#SSH/ACCEPT	net		$FW
#SMB/ACCEPT	net		$FW
#PostgreSQL/ACCEPT	net	$FW
#VNC/DNAT	net		loc:10.0.1.20
#
#	Allow Ping from the local network
#
Ping/ACCEPT	loc		$FW

#
# Drop Ping from the "bad" net zone.. and prevent your log from being flooded..
#

Ping/DROP	net		$FW

ACCEPT		$FW		loc		icmp
ACCEPT		$FW		net		icmp
#

#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE


EOF

echo "finished with shorewall"

echo "replacing /etc/dhcp3/dhcpd.conf"
mv /etc/dhcp3/dhcpd.conf /etc/dhcp3/dhcpd.conf.orig
cat<<EOF > /etc/dhcp3/dhcpd.conf

ddns-update-style none;

default-lease-time 600;
max-lease-time 7200;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
log-facility local7;

subnet 10.0.1.0 netmask 255.255.255.0 {
       range 10.0.1.20 10.0.1.253;
       option domain-name "lapnet";
       option domain-name-servers 10.0.1.1;
       option routers 10.0.1.1;
}

EOF


echo "making paella directories"
mkdir /freespace
# for the debian mirror
mkdir /freespace/debian
# for the nfsroot
mkdir /freespace/paella

echo "linking /freespace/debian to /var/www/debian"
pushd /var/www
ln -s /freespace/debian
popd

